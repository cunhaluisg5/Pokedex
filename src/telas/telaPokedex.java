/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.Agua;
import classes.Eletrico;
import classes.Fogo;
import classes.Grama;
import classes.Normal;
import classes.Pokedex;
import classes.Pokemon;
import classes.Psiquico;
import classes.Voador;
import enuns.EFase;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class telaPokedex extends javax.swing.JFrame {

    private static Pokedex pokedex;
    private int codigo = 1;
    
    public telaPokedex() {
        pokedex = new Pokedex();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfnome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfforca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfataque = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfdefesa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfagilidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbfase = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbtipo = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tapokemon = new javax.swing.JTextArea();
        btcadastrar = new javax.swing.JButton();
        btlimparcadastro = new javax.swing.JButton();
        btbuscartodos = new javax.swing.JButton();
        btbuscarnome = new javax.swing.JButton();
        btbuscartipo = new javax.swing.JButton();
        btlimparlistagem = new javax.swing.JButton();
        btsair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pokedex");
        setMaximumSize(new java.awt.Dimension(851, 466));
        setPreferredSize(new java.awt.Dimension(851, 466));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cadastro de Pokemon", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Força:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Ataque:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Defesa:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Agilidade:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Fase:");

        cbfase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fase 1", "Fase 2", "Fase 3" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Tipo:");

        cbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Água", "Elétrico", "Fogo", "Grama", "Normal", "Psíquico", "Voador" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfnome)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfdefesa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfforca, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(cbfase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(tfataque)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(tfagilidade)
                            .addComponent(cbtipo, 0, 130, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfforca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfataque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfdefesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfagilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbfase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Listagem de Pokemon", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tapokemon.setEditable(false);
        tapokemon.setColumns(20);
        tapokemon.setRows(5);
        jScrollPane1.setViewportView(tapokemon);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        btcadastrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btcadastrar.setText("Cadastrar");
        btcadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcadastrarActionPerformed(evt);
            }
        });

        btlimparcadastro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btlimparcadastro.setText("Limpar");
        btlimparcadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimparcadastroActionPerformed(evt);
            }
        });

        btbuscartodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btbuscartodos.setText("Buscar Todos");
        btbuscartodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbuscartodosActionPerformed(evt);
            }
        });

        btbuscarnome.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btbuscarnome.setText("Buscar por Nome");
        btbuscarnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbuscarnomeActionPerformed(evt);
            }
        });

        btbuscartipo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btbuscartipo.setText("Buscar por Tipo");
        btbuscartipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbuscartipoActionPerformed(evt);
            }
        });

        btlimparlistagem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btlimparlistagem.setText("Limpar");
        btlimparlistagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimparlistagemActionPerformed(evt);
            }
        });

        btsair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btsair.setText("Sair");
        btsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btlimparcadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btcadastrar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btbuscartodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btbuscarnome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btbuscartipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(btlimparlistagem))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btsair, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btcadastrar)
                    .addComponent(btlimparcadastro)
                    .addComponent(btbuscartodos)
                    .addComponent(btbuscartipo)
                    .addComponent(btbuscarnome)
                    .addComponent(btlimparlistagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btsair)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(895, 504));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btlimparcadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimparcadastroActionPerformed
        tfnome.setText("");
        tfforca.setText("");
        tfataque.setText("");
        tfdefesa.setText("");
        tfagilidade.setText("");
        cbfase.setSelectedIndex(0);
        cbtipo.setSelectedIndex(0);
        tfnome.requestFocus();
    }//GEN-LAST:event_btlimparcadastroActionPerformed

    private void btcadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcadastrarActionPerformed
        try{
            int indiceTipo = cbtipo.getSelectedIndex();
            int indiceFase = cbfase.getSelectedIndex();
            preenchePokemon(indiceTipo, indiceFase, pokedex);
            JOptionPane.showMessageDialog(null, "Pokemon cadastrado com sucesso!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Preencha os campos!");
        }
    }//GEN-LAST:event_btcadastrarActionPerformed

    private void btbuscartodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbuscartodosActionPerformed
        try{
            List<Pokemon> lista = pokedex.listarPokemon();
            btlimparlistagemActionPerformed(evt);
            for(Pokemon p : lista){
                tapokemon.append(p.toString() + "\n\n");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao buscar!");
        }
    }//GEN-LAST:event_btbuscartodosActionPerformed

    private void btlimparlistagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimparlistagemActionPerformed
        tapokemon.setText("");
    }//GEN-LAST:event_btlimparlistagemActionPerformed

    private void btbuscarnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbuscarnomeActionPerformed
        try{
            String nome = JOptionPane.showInputDialog(null, "Informe o nome do pokemon!");
            Pokemon pokemon = pokedex.buscaPokemon(nome);
            btlimparlistagemActionPerformed(evt);
            if(pokemon != null){
                tapokemon.setText(pokemon.toString());
            }else{
                JOptionPane.showMessageDialog(null, "Pokemon não encontrado!");
            }            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao buscar!");
        }
    }//GEN-LAST:event_btbuscarnomeActionPerformed

    private void btbuscartipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbuscartipoActionPerformed
        try{
            String tipo = JOptionPane.showInputDialog(null, "Informe o tipo do pokemon!");
            List<Pokemon> pokemon = null;
            pokemon = listaPokemon(tipo.toLowerCase(), pokemon);
            btlimparlistagemActionPerformed(evt);
            if(pokemon != null){
                for(Pokemon p : pokemon){
                    tapokemon.append(p.toString() + "\n\n");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Pokemon não encontrado!");
            }            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao buscar!");
        }
    }//GEN-LAST:event_btbuscartipoActionPerformed

    private void btsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsairActionPerformed
        int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(opcao == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_btsairActionPerformed

    private List<Pokemon> listaPokemon(String tipo, List<Pokemon> pokemon) {
        switch(tipo){
            case "agua":
            case "água":
                pokemon = pokedex.listarPokemonAgua();
                break;
            case "eletrico":
            case "elétrico":
                pokemon = pokedex.listarPokemonEletrico();
                break;
            case "fogo":
                pokemon = pokedex.listarPokemonFogo();
                break;
            case "grama":
                pokemon = pokedex.listarPokemonGrama();
                break;
            case "normal":
                pokemon = pokedex.listarPokemonNormal();
                break;
            case "psiquico":
            case "psíquico":
                pokemon = pokedex.listarPokemonPsiquico();
                break;
            case "voador":
                pokemon = pokedex.listarPokemonVoador();
                break;
        }
        return pokemon;
    }

    private void preenchePokemon(int indiceTipo, int indiceFase, Pokedex pokedex) throws NumberFormatException {
        switch(indiceTipo){
            case 0:
                Agua agua = new Agua();
                agua.setCodigo(codigo);
                codigo++;
                agua.setNome(tfnome.getText());
                agua.setForca(Double.parseDouble(tfforca.getText()));
                agua.setAtaque(Double.parseDouble(tfataque.getText()));
                agua.setDefesa(Double.parseDouble(tfdefesa.getText()));
                agua.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    agua.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    agua.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    agua.setFase(EFase.FASE3);
                }
                agua.ataqueAgua();
                pokedex.adicionaPokemon(agua);
                break;
            case 1:
                Eletrico eletrico = new Eletrico();
                eletrico.setCodigo(codigo);
                codigo++;
                eletrico.setNome(tfnome.getText());
                eletrico.setForca(Double.parseDouble(tfforca.getText()));
                eletrico.setAtaque(Double.parseDouble(tfataque.getText()));
                eletrico.setDefesa(Double.parseDouble(tfdefesa.getText()));
                eletrico.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    eletrico.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    eletrico.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    eletrico.setFase(EFase.FASE3);
                }
                eletrico.ataqueEletrico();
                pokedex.adicionaPokemon(eletrico);
                break;
            case 2:
                Fogo fogo = new Fogo();
                fogo.setCodigo(codigo);
                codigo++;
                fogo.setNome(tfnome.getText());
                fogo.setForca(Double.parseDouble(tfforca.getText()));
                fogo.setAtaque(Double.parseDouble(tfataque.getText()));
                fogo.setDefesa(Double.parseDouble(tfdefesa.getText()));
                fogo.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    fogo.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    fogo.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    fogo.setFase(EFase.FASE3);
                }
                fogo.ataqueFogo();
                pokedex.adicionaPokemon(fogo);
                break;
            case 3:
                Grama grama = new Grama();
                grama.setCodigo(codigo);
                codigo++;
                grama.setNome(tfnome.getText());
                grama.setForca(Double.parseDouble(tfforca.getText()));
                grama.setAtaque(Double.parseDouble(tfataque.getText()));
                grama.setDefesa(Double.parseDouble(tfdefesa.getText()));
                grama.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    grama.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    grama.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    grama.setFase(EFase.FASE3);
                }
                grama.ataqueGrama();
                pokedex.adicionaPokemon(grama);
                break;
            case 4:
                Normal normal = new Normal();
                normal.setCodigo(codigo);
                codigo++;
                normal.setNome(tfnome.getText());
                normal.setForca(Double.parseDouble(tfforca.getText()));
                normal.setAtaque(Double.parseDouble(tfataque.getText()));
                normal.setDefesa(Double.parseDouble(tfdefesa.getText()));
                normal.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    normal.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    normal.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    normal.setFase(EFase.FASE3);
                }
                normal.ataqueNormal();
                pokedex.adicionaPokemon(normal);
                break;
            case 5:
                Psiquico psiquico = new Psiquico();
                psiquico.setCodigo(codigo);
                codigo++;
                psiquico.setNome(tfnome.getText());
                psiquico.setForca(Double.parseDouble(tfforca.getText()));
                psiquico.setAtaque(Double.parseDouble(tfataque.getText()));
                psiquico.setDefesa(Double.parseDouble(tfdefesa.getText()));
                psiquico.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    psiquico.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    psiquico.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    psiquico.setFase(EFase.FASE3);
                }
                psiquico.ataquePsiquico();
                pokedex.adicionaPokemon(psiquico);
                break;
            case 6:
                Voador voador = new Voador();
                voador.setCodigo(codigo);
                codigo++;
                voador.setNome(tfnome.getText());
                voador.setForca(Double.parseDouble(tfforca.getText()));
                voador.setAtaque(Double.parseDouble(tfataque.getText()));
                voador.setDefesa(Double.parseDouble(tfdefesa.getText()));
                voador.setAgilidade(Double.parseDouble(tfagilidade.getText()));
                if(indiceFase == 0){
                    voador.setFase(EFase.FASE1);
                }else if(indiceFase == 1){
                    voador.setFase(EFase.FASE2);
                }else if(indiceFase == 2){
                    voador.setFase(EFase.FASE3);
                }
                voador.ataqueVoador();
                pokedex.adicionaPokemon(voador);
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaPokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaPokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbuscarnome;
    private javax.swing.JButton btbuscartipo;
    private javax.swing.JButton btbuscartodos;
    private javax.swing.JButton btcadastrar;
    private javax.swing.JButton btlimparcadastro;
    private javax.swing.JButton btlimparlistagem;
    private javax.swing.JButton btsair;
    private javax.swing.JComboBox<String> cbfase;
    private javax.swing.JComboBox<String> cbtipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tapokemon;
    private javax.swing.JTextField tfagilidade;
    private javax.swing.JTextField tfataque;
    private javax.swing.JTextField tfdefesa;
    private javax.swing.JTextField tfforca;
    private javax.swing.JTextField tfnome;
    // End of variables declaration//GEN-END:variables
}
